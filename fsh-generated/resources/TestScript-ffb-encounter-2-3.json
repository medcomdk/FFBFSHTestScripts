{
  "resourceType": "TestScript",
  "id": "ffb-encounter-2-3",
  "meta": {
    "profile": [
      "http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript"
    ]
  },
  "url": "http://build.fhir.org/ig/hl7dk/dk-medcom/",
  "status": "active",
  "date": "2021-11-01",
  "publisher": "MedCom",
  "contact": [
    {
      "name": "MedCom",
      "telecom": [
        {
          "system": "email",
          "value": "fhir@medcom.dk",
          "use": "work"
        }
      ]
    }
  ],
  "copyright": "MedCom 2021",
  "name": "Encounter phase 2-3",
  "title": "Encounter phase 2-3",
  "description": "Testing correct use of encounter phase 2-3",
  "origin": [
    {
      "index": 1,
      "profile": {
        "system": "http://terminology.hl7.org/CodeSystem/testscript-profile-origin-types",
        "code": "FHIR-Client"
      }
    }
  ],
  "destination": [
    {
      "index": 1,
      "profile": {
        "system": "http://terminology.hl7.org/CodeSystem/testscript-profile-destination-types",
        "code": "FHIR-Server"
      }
    }
  ],
  "fixture": [
    {
      "id": "fix-bundle-create-2",
      "autocreate": false,
      "autodelete": false,
      "resource": {
        "reference": "/FHIRSandbox/MedCom/401-ffb-reporting/IG-0-9-0/_reference/resources/02Encounter.xml"
      }
    },
    {
      "id": "fix-bundle-create-3",
      "autocreate": false,
      "autodelete": false,
      "resource": {
        "reference": "/FHIRSandbox/MedCom/401-ffb-reporting/IG-0-9-0/_reference/resources/03Encounter.xml"
      }
    },
    {
      "id": "fix-bundle-create-5",
      "autocreate": false,
      "autodelete": false,
      "resource": {
        "reference": "/FHIRSandbox/MedCom/401-ffb-reporting/IG-0-9-0/_reference/resources/05Encounter.xml"
      }
    },
    {
      "id": "fix-bundle-create-6",
      "autocreate": false,
      "autodelete": false,
      "resource": {
        "reference": "/FHIRSandbox/MedCom/401-ffb-reporting/IG-0-9-0/_reference/resources/06Encounter.xml"
      }
    }
  ],
  "test": [
    {
      "id": "ffb-2",
      "name": "2 Post ffb-report",
      "description": "Post ffb-report",
      "action": [
        {
          "operation": {
            "type": {
              "system": "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
              "code": "create"
            },
            "resource": "Bundle",
            "description": "Post a ffb-report",
            "destination": 1,
            "encodeRequestUrl": true,
            "origin": 1,
            "sourceId": "fix-bundle-create-2",
            "responseId": "bundle-create-2"
          }
        },
        {
          "assert": {
            "description": "Confirm that the ClinicalImpression.effectiveDateTime is less than or equal to the bundle.timestamp",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(ClinicalImpression).effective  <= Bundle.timestamp",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the ClinicalImpression.effectiveDateTime less than or equal to now",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(ClinicalImpression).effective",
            "operator": "lessThan",
            "value": "${CURRENTDATETIME}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the ClinicalImpression.status is equal to in-progress",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(ClinicalImpression).status",
            "operator": "equals",
            "value": "in-progress",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Test that there exists at least 1 Condition in the bundle ",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).count() > 0",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Make sure the numbers of ClinicalImpression.finding and Conditions is equal ",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).count() = Bundle.entry.resource.ofType(ClinicalImpression).finding.count()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 3f9da5ac-9686-4eeb-b517-b46e17fcb1d7 exist where severity is 5bdde847-2837-416b-ab63-bbff8b7aa531 in Bundle.Condition",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).where(code.coding.code = '3f9da5ac-9686-4eeb-b517-b46e17fcb1d7').severity.coding.code",
            "operator": "equals",
            "value": "5bdde847-2837-416b-ab63-bbff8b7aa531",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 685e8517-2f5c-4ef8-a7c4-fa2d008fdd9d exist where severity is 8328ce4a-6238-4f73-bf1a-74aadb68eff8 in Bundle.Condition",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).where(code.coding.code = '685e8517-2f5c-4ef8-a7c4-fa2d008fdd9d').severity.coding.code",
            "operator": "equals",
            "value": "8328ce4a-6238-4f73-bf1a-74aadb68eff8",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 464a2ab6-a7df-4b3a-b74d-7873f4cfe668 exist where severity is cae545f5-2813-4d79-98fc-0a7d770af3cd in Bundle.Condition",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).where(code.coding.code = '464a2ab6-a7df-4b3a-b74d-7873f4cfe668').severity.coding.code",
            "operator": "equals",
            "value": "cae545f5-2813-4d79-98fc-0a7d770af3cd",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 01770afa-cd17-41fe-a966-b8895e4d55d8 exist where severity is 5bdde847-2837-416b-ab63-bbff8b7aa531 in Bundle.Condition",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).where(code.coding.code = '01770afa-cd17-41fe-a966-b8895e4d55d8').severity.coding.code",
            "operator": "equals",
            "value": "5bdde847-2837-416b-ab63-bbff8b7aa531",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition eff3385d-01fa-4c9c-9850-52e179243f21 exist where severity is cae545f5-2813-4d79-98fc-0a7d770af3cd in Bundle.Condition",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).where(code.coding.code = 'eff3385d-01fa-4c9c-9850-52e179243f21').severity.coding.code",
            "operator": "equals",
            "value": "cae545f5-2813-4d79-98fc-0a7d770af3cd",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 4934e45a-0f93-4c23-a767-2b681378700b exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='4934e45a-0f93-4c23-a767-2b681378700b').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition ef4271c4-f942-4194-a2b0-e9a7045eab22 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='ef4271c4-f942-4194-a2b0-e9a7045eab22').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition b93216fa-3843-4a7e-85bc-e3ef35a1967f exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='b93216fa-3843-4a7e-85bc-e3ef35a1967f').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 9959e779-e8ee-47e8-989b-bbff4aae2883 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='9959e779-e8ee-47e8-989b-bbff4aae2883').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition e6f82424-da5a-41d1-bd1a-5796aa79d5f2 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='e6f82424-da5a-41d1-bd1a-5796aa79d5f2').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition f5b8e809-7689-4952-838c-a069c99408b3 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='f5b8e809-7689-4952-838c-a069c99408b3').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 52efa2e9-e0dc-41eb-8c01-9865e2fdebae exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='52efa2e9-e0dc-41eb-8c01-9865e2fdebae').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 7a8f247b-baf8-4552-95bb-acf8ef004b74 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='7a8f247b-baf8-4552-95bb-acf8ef004b74').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 83342ff3-5f2e-4914-b045-e98357685866 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='83342ff3-5f2e-4914-b045-e98357685866').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition df194a84-6e4b-4f14-a194-d8d9d9a1fcad exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='df194a84-6e4b-4f14-a194-d8d9d9a1fcad').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 3f9da5ac-9686-4eeb-b517-b46e17fcb1d7 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='3f9da5ac-9686-4eeb-b517-b46e17fcb1d7').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 685e8517-2f5c-4ef8-a7c4-fa2d008fdd9d exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='685e8517-2f5c-4ef8-a7c4-fa2d008fdd9d').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 464a2ab6-a7df-4b3a-b74d-7873f4cfe668 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='464a2ab6-a7df-4b3a-b74d-7873f4cfe668').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 01770afa-cd17-41fe-a966-b8895e4d55d8 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='01770afa-cd17-41fe-a966-b8895e4d55d8').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition eff3385d-01fa-4c9c-9850-52e179243f21 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='eff3385d-01fa-4c9c-9850-52e179243f21').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition recordedDate is less than or equal to bundle.timestamp",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).all(recordedDate <= %resource.timestamp)",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition clinicalStatus is active",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).clinicalStatus.all(coding.code = 'active')",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition verification Status is Confirmed",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).verificationStatus.all(coding.code = 'confirmed')",
            "warningOnly": false
          }
        }
      ]
    },
    {
      "id": "ffb-3",
      "name": "3 Post ffb-report",
      "description": "Post ffb-report",
      "action": [
        {
          "operation": {
            "type": {
              "system": "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
              "code": "create"
            },
            "resource": "Bundle",
            "description": "Post a ffb-report",
            "destination": 1,
            "encodeRequestUrl": true,
            "origin": 1,
            "sourceId": "fix-bundle-create-3",
            "responseId": "bundle-create-3"
          }
        },
        {
          "assert": {
            "description": "Confirm that the ClinicalImpression contains reference to the ServiceRequest MunicipalityCaseNumber",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(ClinicalImpression).extension.where(url= 'http://kl.dk/fhir/common/caresocial/StructureDefinition/BasedOnServiceRequest').value.reference",
            "operator": "equals",
            "value": "${ServiceRequestFullUrl}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Citizen Identifier is same as Previous",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Patient).identifier.value",
            "operator": "equals",
            "value": "${patientIdentifier}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Bundle contains a ServiceRequest MunicipalityCaseNumber",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(ServiceRequest).extension.where(url= 'http://ffb/reporting/kl.dk/1.0/StructureDefinition/kl-reporting-ffb-municipalityCaseNumber').extension.where(url= 'municipalitySpecific').value.value",
            "operator": "equals",
            "value": "${municipalityCaseNumber}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the ServiceRequest is the same as the first",
            "direction": "request",
            "expression": "Bundle.entry.where(resource.ofType(ServiceRequest)).fullUrl",
            "operator": "equals",
            "value": "${ServiceRequestFullUrl}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Test that there exists at least 1 Condition in the bundle ",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).count() > 0",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Make sure the numbers of ClinicalImpression.finding and Conditions is equal ",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).count() = Bundle.entry.resource.ofType(ClinicalImpression).finding.count()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the CarePlanEvaluationCode is equal to dd628e73-d6c9-4837-a2b8-aa62d73bd6ae",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Observation).value.where(coding.system = 'http://kl.dk/fhir/common/caresocial/CodeSystem/FFB').coding.code",
            "operator": "equals",
            "value": "dd628e73-d6c9-4837-a2b8-aa62d73bd6ae",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the changevalue is of taget type funktionsevneniveau",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Goal).target.where(detail.coding.code = '8328ce4a-6238-4f73-bf1a-74aadb68eff8').measure.coding.code",
            "operator": "equals",
            "value": "66959f77-6e2a-4574-8423-3ff097f8b9fa",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the changevalue is of taget type funktionsevneniveau",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Goal).target.where(detail.coding.code = 'b508ff66-6326-4862-a6d7-7bbf184c9823').measure.coding.code",
            "operator": "equals",
            "value": "66959f77-6e2a-4574-8423-3ff097f8b9fa",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the changevalue is of taget type funktionsevneniveau",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Goal).target.where(detail.coding.code = 'cae545f5-2813-4d79-98fc-0a7d770af3cd').measure.coding.code",
            "operator": "equals",
            "value": "66959f77-6e2a-4574-8423-3ff097f8b9fa",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the changevalue is of taget type funktionsevneniveau",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Goal).target.where(detail.coding.code = 'cae545f5-2813-4d79-98fc-0a7d770af3cd').measure.coding.code",
            "operator": "equals",
            "value": "66959f77-6e2a-4574-8423-3ff097f8b9fa",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the numbers of GoalConditionRank is equal to 5",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Goal).addresses.extension.where(url = 'http://kl.dk/fhir/common/caresocial/StructureDefinition/ConditionRank').count()",
            "operator": "equals",
            "value": "5",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Goal contains the correct target and addresses combinations",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Goal).where((('66959f77-6e2a-4574-8423-3ff097f8b9fa' in target.measure.coding.code) and ('90c48f03-f194-4b2f-ad7d-6cba1069ae48' in target.measure.coding.code)) and (target.where(measure.coding.code = '66959f77-6e2a-4574-8423-3ff097f8b9fa').detail.coding.code = '8328ce4a-6238-4f73-bf1a-74aadb68eff8') and (target.where(measure.coding.code = '90c48f03-f194-4b2f-ad7d-6cba1069ae48').detail.coding.code = '10752a63-00b4-4958-b7f4-9f3a18f74266') and (%resource.entry.where(resource.ofType(Condition).code.coding.code = '3f9da5ac-9686-4eeb-b517-b46e17fcb1d7' and resource.ofType(Condition).severity.coding.code = '5bdde847-2837-416b-ab63-bbff8b7aa531').fullUrl.replace('url','') in addresses.reference) and (%resource.entry.where(resource.ofType(Condition).code.coding.code = '685e8517-2f5c-4ef8-a7c4-fa2d008fdd9d' and resource.ofType(Condition).severity.coding.code = '8328ce4a-6238-4f73-bf1a-74aadb68eff8').fullUrl.replace('url','') in addresses.reference) and (%resource.entry.where(resource.ofType(Condition).code.coding.code = 'eff3385d-01fa-4c9c-9850-52e179243f21' and resource.ofType(Condition).severity.coding.code = 'cae545f5-2813-4d79-98fc-0a7d770af3cd').fullUrl.replace('url','') in addresses.reference)).count()",
            "operator": "equals",
            "value": "1",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Goal contains the correct target and addresses combinations",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Goal).where((('66959f77-6e2a-4574-8423-3ff097f8b9fa' in target.measure.coding.code) and ('90c48f03-f194-4b2f-ad7d-6cba1069ae48' in target.measure.coding.code)) and (target.where(measure.coding.code = '66959f77-6e2a-4574-8423-3ff097f8b9fa').detail.coding.code = 'b508ff66-6326-4862-a6d7-7bbf184c9823') and (target.where(measure.coding.code = '90c48f03-f194-4b2f-ad7d-6cba1069ae48').detail.coding.code = 'd41c8072-52f8-42b5-9375-ddbea454d27f') and (%resource.entry.where(resource.ofType(Condition).code.coding.code = '01770afa-cd17-41fe-a966-b8895e4d55d8' and resource.ofType(Condition).severity.coding.code = '5bdde847-2837-416b-ab63-bbff8b7aa531').fullUrl.replace('url','') in addresses.reference)).count()",
            "operator": "equals",
            "value": "1",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Goal contains the correct target and addresses combinations",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Goal).where((('66959f77-6e2a-4574-8423-3ff097f8b9fa' in target.measure.coding.code) and ('90c48f03-f194-4b2f-ad7d-6cba1069ae48' in target.measure.coding.code)) and (target.where(measure.coding.code = '66959f77-6e2a-4574-8423-3ff097f8b9fa').detail.coding.code = 'cae545f5-2813-4d79-98fc-0a7d770af3cd') and (target.where(measure.coding.code = '90c48f03-f194-4b2f-ad7d-6cba1069ae48').detail.coding.code = 'e47c22bd-d88d-48ab-882b-419923e1f44e') and (%resource.entry.where(resource.ofType(Condition).code.coding.code = '464a2ab6-a7df-4b3a-b74d-7873f4cfe668' and resource.ofType(Condition).severity.coding.code = 'cae545f5-2813-4d79-98fc-0a7d770af3cd').fullUrl.replace('url','') in addresses.reference)).count()",
            "operator": "equals",
            "value": "1",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Goal lifecycleStatus is active",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Goal).all(lifecycleStatus = 'active').count()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 4934e45a-0f93-4c23-a767-2b681378700b exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='4934e45a-0f93-4c23-a767-2b681378700b').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition ef4271c4-f942-4194-a2b0-e9a7045eab22 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='ef4271c4-f942-4194-a2b0-e9a7045eab22').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition b93216fa-3843-4a7e-85bc-e3ef35a1967f exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='b93216fa-3843-4a7e-85bc-e3ef35a1967f').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 9959e779-e8ee-47e8-989b-bbff4aae2883 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='9959e779-e8ee-47e8-989b-bbff4aae2883').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition e6f82424-da5a-41d1-bd1a-5796aa79d5f2 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='e6f82424-da5a-41d1-bd1a-5796aa79d5f2').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition f5b8e809-7689-4952-838c-a069c99408b3 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='f5b8e809-7689-4952-838c-a069c99408b3').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 52efa2e9-e0dc-41eb-8c01-9865e2fdebae exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='52efa2e9-e0dc-41eb-8c01-9865e2fdebae').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 7a8f247b-baf8-4552-95bb-acf8ef004b74 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='7a8f247b-baf8-4552-95bb-acf8ef004b74').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 83342ff3-5f2e-4914-b045-e98357685866 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='83342ff3-5f2e-4914-b045-e98357685866').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition df194a84-6e4b-4f14-a194-d8d9d9a1fcad exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='df194a84-6e4b-4f14-a194-d8d9d9a1fcad').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 3f9da5ac-9686-4eeb-b517-b46e17fcb1d7 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='3f9da5ac-9686-4eeb-b517-b46e17fcb1d7').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 685e8517-2f5c-4ef8-a7c4-fa2d008fdd9d exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='685e8517-2f5c-4ef8-a7c4-fa2d008fdd9d').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 464a2ab6-a7df-4b3a-b74d-7873f4cfe668 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='464a2ab6-a7df-4b3a-b74d-7873f4cfe668').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 01770afa-cd17-41fe-a966-b8895e4d55d8 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='01770afa-cd17-41fe-a966-b8895e4d55d8').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition eff3385d-01fa-4c9c-9850-52e179243f21 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='eff3385d-01fa-4c9c-9850-52e179243f21').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the ClinicalImpression.effectiveDateTime is less than or equal to the bundle.timestamp",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(ClinicalImpression).effective  <= Bundle.timestamp",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the ClinicalImpression.effectiveDateTime less than or equal to now",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(ClinicalImpression).effective",
            "operator": "lessThan",
            "value": "${CURRENTDATETIME}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the ClinicalImpression.status is equal to completed",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(ClinicalImpression).status",
            "operator": "equals",
            "value": "completed",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition recordedDate is less than or equal to bundle.timestamp",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).all(recordedDate <= %resource.timestamp)",
            "warningOnly": false
          }
        }
      ]
    },
    {
      "id": "ffb-5",
      "name": "5 Post ffb-report",
      "description": "Post ffb-report",
      "action": [
        {
          "operation": {
            "type": {
              "system": "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
              "code": "create"
            },
            "resource": "Bundle",
            "description": "Post a ffb-report",
            "destination": 1,
            "encodeRequestUrl": true,
            "origin": 1,
            "sourceId": "fix-bundle-create-5",
            "responseId": "bundle-create-5"
          }
        },
        {
          "assert": {
            "description": "Confirm that the Citizen Identifier is same as Previous",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Patient).identifier.value",
            "operator": "equals",
            "value": "${patientIdentifier}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Test that there exists at least 1 Condition in the bundle ",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).count() > 0",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the CarePlanEvaluationCode is equal to dd628e73-d6c9-4837-a2b8-aa62d73bd6ae",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Observation).value.where(coding.system = 'http://kl.dk/fhir/common/caresocial/CodeSystem/FFB').coding.code",
            "operator": "equals",
            "value": "dd628e73-d6c9-4837-a2b8-aa62d73bd6ae",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 5cfc9530-a193-4f66-9981-3b980ee9ea7b occures 2 in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='5cfc9530-a193-4f66-9981-3b980ee9ea7b').count() = 2",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 5cfc9530-a193-4f66-9981-3b980ee9ea7b exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='5cfc9530-a193-4f66-9981-3b980ee9ea7b').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the observation contains code: effe55c7-572c-4a99-8fb4-2a9dda2f6572 and value: dd628e73-d6c9-4837-a2b8-aa62d73bd6ae",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Observation).where((code.coding.code ='effe55c7-572c-4a99-8fb4-2a9dda2f6572') and (value.coding.code ='dd628e73-d6c9-4837-a2b8-aa62d73bd6ae')).count() = 1",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Careplan contains 3 interventions",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(CarePlan).where((period.end.exists().not()) and (status = 'active') and (intent = 'order') and (meta.profile = 'http://ffb/reporting/kl.dk/1.0/StructureDefinition/kl-reporting-ffb-intervention')).count() = 3",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Careplan contains correct status: active, order: {order}, and addresses",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(CarePlan).where((%resource.entry.where(resource.ofType(CareTeam).category.coding.code = '498fe92c-d7f7-41cd-9404-5b38fe113be0').fullUrl in careTeam.reference) and (status = 'active') and (intent = 'plan') and ((%resource.entry.where(resource.ofType(Condition).code.coding.code = '5cfc9530-a193-4f66-9981-3b980ee9ea7b').fullUrl.first().replace('url','') in addresses.reference) and (%resource.entry.where(resource.ofType(Condition).code.coding.code = '5e95db73-4d16-4084-93a3-595c0650b160').fullUrl.first().replace('url','') in addresses.reference))).count()  = 1",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Careplan contains correct status: active, order: {order}, and addresses",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(CarePlan).where((%resource.entry.where(resource.ofType(CareTeam).category.coding.code = '9401777d-bdc5-4f52-9804-63c8cae9a792').fullUrl in careTeam.reference) and (status = 'active') and (intent = 'order') and ((%resource.entry.where(resource.ofType(Condition).code.coding.code = '5cfc9530-a193-4f66-9981-3b980ee9ea7b').fullUrl.first().replace('url','') in addresses.reference) and (%resource.entry.where(resource.ofType(Condition).code.coding.code = '5e95db73-4d16-4084-93a3-595c0650b160').fullUrl.first().replace('url','') in addresses.reference))).count()  = 1",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Careplan Careplan contains MunicipalityCasenumber: ${municipalityCaseNumber} from first Encounter",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(CarePlan).extension.where(url= 'http://ffb/reporting/kl.dk/1.0/StructureDefinition/kl-reporting-ffb-municipalityCaseNumber').all(extension.value.value = '${municipalityCaseNumber}')",
            "warningOnly": false
          }
        }
      ]
    },
    {
      "id": "ffb-6",
      "name": "6 Post ffb-report",
      "description": "Post ffb-report",
      "action": [
        {
          "operation": {
            "type": {
              "system": "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
              "code": "create"
            },
            "resource": "Bundle",
            "description": "Post a ffb-report",
            "destination": 1,
            "encodeRequestUrl": true,
            "origin": 1,
            "sourceId": "fix-bundle-create-6",
            "responseId": "bundle-create-6"
          }
        },
        {
          "assert": {
            "description": "Confirm that the Citizen Identifier is same as Previous",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Patient).identifier.value",
            "operator": "equals",
            "value": "${patientIdentifier}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Test that there exists at least 1 Condition in the bundle ",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).count() > 0",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 5cfc9530-a193-4f66-9981-3b980ee9ea7b occures 2 in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='5cfc9530-a193-4f66-9981-3b980ee9ea7b').count() = 2",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 5cfc9530-a193-4f66-9981-3b980ee9ea7b exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='5cfc9530-a193-4f66-9981-3b980ee9ea7b').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the observation contains code: effe55c7-572c-4a99-8fb4-2a9dda2f6572 and value: dd628e73-d6c9-4837-a2b8-aa62d73bd6ae",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Observation).where((code.coding.code ='effe55c7-572c-4a99-8fb4-2a9dda2f6572') and (value.coding.code ='dd628e73-d6c9-4837-a2b8-aa62d73bd6ae')).count() = 1",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Careplan contains correct status: active, order: {order}, and addresses",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(CarePlan).where((%resource.entry.where(resource.ofType(CareTeam).category.coding.code = '498fe92c-d7f7-41cd-9404-5b38fe113be0').fullUrl in careTeam.reference) and (status = 'active') and (intent = 'plan') and ((%resource.entry.where(resource.ofType(Condition).code.coding.code = '5cfc9530-a193-4f66-9981-3b980ee9ea7b').fullUrl.first().replace('url','') in addresses.reference) and (%resource.entry.where(resource.ofType(Condition).code.coding.code = '5e95db73-4d16-4084-93a3-595c0650b160').fullUrl.first().replace('url','') in addresses.reference))).count()  = 1",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Careplan contains correct status: active, order: {order}, and addresses",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(CarePlan).where((%resource.entry.where(resource.ofType(CareTeam).category.coding.code = '9401777d-bdc5-4f52-9804-63c8cae9a792').fullUrl in careTeam.reference) and (status = 'active') and (intent = 'order') and ((%resource.entry.where(resource.ofType(Condition).code.coding.code = '5cfc9530-a193-4f66-9981-3b980ee9ea7b').fullUrl.first().replace('url','') in addresses.reference) and (%resource.entry.where(resource.ofType(Condition).code.coding.code = '5e95db73-4d16-4084-93a3-595c0650b160').fullUrl.first().replace('url','') in addresses.reference))).count()  = 1",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Careplan Careplan contains MunicipalityCasenumber: ${municipalityCaseNumber} from first Encounter",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(CarePlan).extension.where(url= 'http://ffb/reporting/kl.dk/1.0/StructureDefinition/kl-reporting-ffb-municipalityCaseNumber').all(extension.value.value = '${municipalityCaseNumber}')",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Bundle contains a ServiceRequest MunicipalityCaseNumber",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(ServiceRequest).extension.where(url= 'http://ffb/reporting/kl.dk/1.0/StructureDefinition/kl-reporting-ffb-municipalityCaseNumber').extension.where(url= 'municipalitySpecific').value.value",
            "operator": "equals",
            "value": "${municipalityCaseNumber}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the ServiceRequest is the same as the first",
            "direction": "request",
            "expression": "Bundle.entry.where(resource.ofType(ServiceRequest)).fullUrl",
            "operator": "equals",
            "value": "${ServiceRequestFullUrl}",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the ServiceRequest ServiceRequest has correct status: active,  intent: proposal and numbers of instances: 1",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(ServiceRequest).where(status = 'active' and intent = 'proposal').count() = 1",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition clinicalStatus is active",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).clinicalStatus.all(coding.code = 'active')",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition recordedDate is less than or equal to bundle.timestamp",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).all(recordedDate <= %resource.timestamp)",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition verification Status is Confirmed",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).verificationStatus.all(coding.code = 'confirmed')",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 4934e45a-0f93-4c23-a767-2b681378700b exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='4934e45a-0f93-4c23-a767-2b681378700b').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition ef4271c4-f942-4194-a2b0-e9a7045eab22 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='ef4271c4-f942-4194-a2b0-e9a7045eab22').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition b93216fa-3843-4a7e-85bc-e3ef35a1967f exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='b93216fa-3843-4a7e-85bc-e3ef35a1967f').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 9959e779-e8ee-47e8-989b-bbff4aae2883 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='9959e779-e8ee-47e8-989b-bbff4aae2883').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition e6f82424-da5a-41d1-bd1a-5796aa79d5f2 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='e6f82424-da5a-41d1-bd1a-5796aa79d5f2').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition f5b8e809-7689-4952-838c-a069c99408b3 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='f5b8e809-7689-4952-838c-a069c99408b3').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 52efa2e9-e0dc-41eb-8c01-9865e2fdebae exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='52efa2e9-e0dc-41eb-8c01-9865e2fdebae').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 7a8f247b-baf8-4552-95bb-acf8ef004b74 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='7a8f247b-baf8-4552-95bb-acf8ef004b74').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 83342ff3-5f2e-4914-b045-e98357685866 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='83342ff3-5f2e-4914-b045-e98357685866').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition df194a84-6e4b-4f14-a194-d8d9d9a1fcad exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='df194a84-6e4b-4f14-a194-d8d9d9a1fcad').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 5cfc9530-a193-4f66-9981-3b980ee9ea7b exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='5cfc9530-a193-4f66-9981-3b980ee9ea7b').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 5cfc9530-a193-4f66-9981-3b980ee9ea7b exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='5cfc9530-a193-4f66-9981-3b980ee9ea7b').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition 5e95db73-4d16-4084-93a3-595c0650b160 exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).code.coding.where(code ='5e95db73-4d16-4084-93a3-595c0650b160').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition code: 3f9da5ac-9686-4eeb-b517-b46e17fcb1d7 and severity: 5bdde847-2837-416b-ab63-bbff8b7aa531  exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).where(code.coding.code ='3f9da5ac-9686-4eeb-b517-b46e17fcb1d7' and severity.coding.code = '5bdde847-2837-416b-ab63-bbff8b7aa531').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition code: 685e8517-2f5c-4ef8-a7c4-fa2d008fdd9d and severity: 8328ce4a-6238-4f73-bf1a-74aadb68eff8  exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).where(code.coding.code ='685e8517-2f5c-4ef8-a7c4-fa2d008fdd9d' and severity.coding.code = '8328ce4a-6238-4f73-bf1a-74aadb68eff8').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition code: 464a2ab6-a7df-4b3a-b74d-7873f4cfe668 and severity: cae545f5-2813-4d79-98fc-0a7d770af3cd  exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).where(code.coding.code ='464a2ab6-a7df-4b3a-b74d-7873f4cfe668' and severity.coding.code = 'cae545f5-2813-4d79-98fc-0a7d770af3cd').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition code: 01770afa-cd17-41fe-a966-b8895e4d55d8 and severity: 5bdde847-2837-416b-ab63-bbff8b7aa531  exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).where(code.coding.code ='01770afa-cd17-41fe-a966-b8895e4d55d8' and severity.coding.code = '5bdde847-2837-416b-ab63-bbff8b7aa531').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the Condition code: eff3385d-01fa-4c9c-9850-52e179243f21 and severity: cae545f5-2813-4d79-98fc-0a7d770af3cd  exist in Bundle",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(Condition).where(code.coding.code ='eff3385d-01fa-4c9c-9850-52e179243f21' and severity.coding.code = 'cae545f5-2813-4d79-98fc-0a7d770af3cd').exists()",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the bundle contains one ClinicalImpression that is BasedOnServiceRequest",
            "direction": "request",
            "expression": "Bundle.entry.resource.ofType(ClinicalImpression).extension.where(url = 'http://kl.dk/fhir/common/caresocial/StructureDefinition/BasedOnServiceRequest').value.reference = %resource.entry.where(resource.ofType(ServiceRequest)).fullUrl.replace('uri', 'string')",
            "warningOnly": false
          }
        }
      ]
    }
  ],
  "profile": [
    {
      "id": "kl-ffb-reporting-profile",
      "reference": "http://ffb/reporting/kl.dk/1.0/StructureDefinition/kl-reporting-ffb-deliveryReport"
    }
  ],
  "variable": [
    {
      "name": "municipalityCaseNumber",
      "expression": "Bundle.entry.resource.ofType(ServiceRequest).extension.where(url= 'http://ffb/reporting/kl.dk/1.0/StructureDefinition/kl-reporting-ffb-municipalityCaseNumber').extension.where(url= 'municipalitySpecific').value.value",
      "sourceId": "bundle-create-2"
    },
    {
      "name": "patientIdentifier",
      "expression": "Bundle.entry.resource.ofType(Patient).identifier.value",
      "sourceId": "bundle-create-2"
    },
    {
      "name": "ServiceRequestFullUrl",
      "expression": "Bundle.entry.where(resource.ofType(ServiceRequest)).fullUrl",
      "sourceId": "bundle-create-2"
    },
    {
      "name": "clinicalImpressionId2",
      "expression": "Bundle.entry.resource.ofType(ClinicalImpression).id",
      "sourceId": "bundle-create-2"
    }
  ]
}
